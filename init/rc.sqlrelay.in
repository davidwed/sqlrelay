#! /bin/sh
#
# sqlrelay   This starts and stops SQL relay.
#
# chkconfig: 345 85 15
# description: Persistent database connection system.
#
# PROVIDE: sqlrelay
# REQUIRE: netif


# define default message functions
success() {
    printf success
}
failure() {
    printf failure
}
passed() {
    printf passed
}


# override them with fancier ones if available
if ( test -r "/etc/init.d/functions" )
then
    . /etc/init.d/functions
else
    if ( test -r "/etc/rc.d/init.d/functions" )
    then
        . /etc/rc.d/init.d/functions
    fi
fi


# make sure networking is up (if we can)
if ( test -f "/etc/sysconfig/network" )
then
    . /etc/sysconfig/network
    if ( test "${NETWORKING}" != "yes" )
    then
        exit 0
    fi
fi


# for BSD-ish systems, bail if sqlrelay isn't enabled in /etc/rc.conf
BSD="no"
if ( test -r "/etc/rc.conf" )
then

    BSD="yes"

    # load subroutines to process /etc/rc.conf
    . /etc/rc.conf

    UNAME=`uname`
    if ( test "$UNAME" = "OpenBSD" )
    then

        # on OpenBSD sqlrelay_flags=NO disables
        if ( test "${sqlrelay_flags}" = "NO" -o \
                    "${sqlrelay_flags}" = "No" -o \
                    "${sqlrelay_flags}" = "no" )
        then
            exit 0
        fi

    elif ( test "$UNAME" = "FreeBSD" )
    then

        # on FreeBSD sqlrelay_enable=YES enables
        if ( test "${sqlrelay_enable}" != "YES" -a \
                    "${sqlrelay_enable}" != "Yes" -a \
                    "${sqlrelay_enable}" != "yes" )
        then
            exit 0
        fi

    else

        # on NetBSD and Minix (and others) sqlrelay=YES enables
        if ( test "${sqlrelay}" != "YES" -a \
                    "${sqlrelay}" != "Yes" -a \
                    "${sqlrelay}" != "yes" )
        then
            exit 0
        fi
    fi
fi


# define paths
prefix=@prefix@
sysconfdir=@sysconfdir@
localstatedir=@localstatedir@
tmpdir=${localstatedir}/sqlrelay/tmp


# look for a readable sqlrelay.conf
if ( test ! -r "${sysconfdir}/sqlrelay.conf" )
then
    exit 1
fi


# define lock directory
lockdir=/tmp
if ( test -w "/var/lock/subsys" )
then
    lockdir=/var/lock/subsys
elif ( test -w "/var/lock" )
then
    lockdir=/var/lock
fi


# define instance file
instances=/etc/sqlrelay
if ( test -r "/etc/sysconfig/sqlrelay" )
then
    instances=/etc/sysconfig/sqlrelay
fi


# Add appropriate bin/lib paths
if ( test "${prefix}" != "/usr" )
then
    PATH=$PATH:${prefix}/bin
    export PATH
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${prefix}/lib
    export LD_LIBRARY_PATH
fi


# initialize return value
RETVAL=0


cleanup() {
    for i in `ls ${tmpdir}/pids/* 2>/dev/null`
    do
        if ( test -r "$i" )
        then
            PID=`cat $i`
            if ( test -z "`ps -p $PID | grep sqlr-`" )
            then
                echo "$PID is not sqlr! removing pidfile ..."
                rm -f $i
            fi
        fi
    done
}

start_sqlrelay() {
    if ( test -r "${instances}" )
    then
        connids=`grep -v "^#" ${instances}`
        if ( test -n "${connids}" )
        then
            launched=0
            for connid in $connids do
                printf "sqlrelay (${connid})"
                sqlr-start -id ${connid} 0<&- 1>&- 2>&-
                RETVAL=$?
                if ( test "$BSD" = "no" )
                then
                    printf ": "
                    if ( test $RETVAL -eq 0 )
                    then
                        success
                    else
                        failure
                    fi
                    echo
                fi
                launched=1
            done
        fi
    fi
    if ( test $RETVAL -eq 0 )
    then
        touch ${lockdir}/sqlrelay
    fi
    cleanup
    return $RETVAL
}

stop_sqlrelay() {
    if ( test -r "${instances}" )
    then
        connids=`grep -v "^#" ${instances}`
        if ( test -n "${connids}" )
        then
            launched=0
            for connid in $connids do
                printf "sqlrelay (${connid})"
                sqlr-stop ${connid} 0<&- 1>&- 2>&-
                RETVAL=$?
                if ( test "$BSD" = "no" )
                then
                    printf ": "
                    if ( test $RETVAL -eq 0 )
                    then
                        success
                    else
                        failure
                    fi
                    echo
                fi
                launched=1
            done
        fi
    fi
    if ( test $RETVAL -eq 0 )
    then
        rm -f ${lockdir}/sqlrelay
    fi
    cleanup
    return $RETVAL
}

restart_sqlrelay() {
    stop_sqlrelay
    start_sqlrelay
}

condrestart_sqlrelay() {
    if ( test -r "${lockdir}/sqlrelay" )
    then
        restart_sqlrelay
    fi
    return 0
}


# See how we were called.
case "$1" in
    start)
        start_sqlrelay
        ;;
    stop)
        stop_sqlrelay
        ;;
    restart)
        restart_sqlrelay
        ;;
    reload)
        restart_sqlrelay
        ;;
    condrestart)
        condrestart_sqlrelay
        ;;
    *)
        if ( test -r "/etc/rc.subr" -o -r "/etc/rc.d/rc.subr" )
        then
            # on BSD systems assume start
            start_sqlrelay
        else
            # on others, print usage
            echo "Usage: sqlrelay {start|stop|restart|condrestart}"
            RETVAL=1
        fi
esac

exit $RETVAL
