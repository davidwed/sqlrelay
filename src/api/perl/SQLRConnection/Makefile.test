top_builddir = ../../../..

include ../../../../config.mk

PERLCCFLAGS = $(DESTDIR)$(shell eval "export `$(PERL) -V:ccflags`"; echo $$ccflags | sed -e 's| -belf||g' -e 's| -KPIC||g' -e 's| -xdepend|g' -e 's| -x03||g' )
PERLOPTIMIZE = $(DESTDIR)$(shell eval "export `$(PERL) -V:optimize`"; echo $$optimize | sed -e 's| -belf||g' -e 's| -KPIC||g' -e 's| -xdepend|g' -e 's| -x03||g' )
PERLSITEARCH = $(DESTDIR)$(shell eval "export `$(PERL) -V:sitearch`"; echo $$sitearch )
PERL_INC = $(DESTDIR)$(shell eval "export `$(PERL) -V:archlibexp`"; echo "-I$$archlibexp/CORE" )
PERL_LIB = $(DESTDIR)$(shell eval "export `$(PERL) -V:privlibexp`"; echo $$privlibexp )
PERLINSTALLMAN3DIR = $(DESTDIR)$(shell eval "export `$(PERL) -V:installman3dir`"; echo $$installman3dir )
PERLMAN3EXT = $(shell eval "export `$(PERL) -V:man3ext`"; echo $$man3ext )

CPPFLAGS = $(BASECPPFLAGS) $(PERLOPTIMIZE) $(PERLCCFLAGS) -I./ -I$(top_builddir) -I$(top_builddir)/src/api/c++/include $(RUDIMENTSINCLUDES) $(PERL_INC)
LIBS = -L$(top_builddir)/src/api/c++/src -lsqlrclient $(RUDIMENTSLIBS) $(PTHREADLIBS) $(LIBDMALLOC) $(LIBEFENCE)
RPATH =
ifneq ($(strip $(libdir)),)
ifeq ($(PERLUSERPATH),yes)
	RPATH = -R $(libdir)
endif
endif

.SUFFIXES: .lo .xs

.xs.C:
	$(PERL) $(PERL_LIB)/ExtUtils/xsubpp -noprototypes -C++ -typemap $(PERL_LIB)/ExtUtils/typemap -typemap perlobject.map -typemap typemap $< > $<c && mv $<c $@

.C.lo:
	cp perlincludes1.h perlincludes.h; \
	$(LIBTOOL) --mode=compile $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@ 2> errors1; \
	if ( test ! -r SQLRConnection.lo ); then \
		cp perlincludes2.h perlincludes.h; \
		$(LIBTOOL) --mode=compile $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@ 2> errors2; \
		if ( test ! -r SQLRConnection.lo ); then \
			cp perlincludes2.h perlincludes.h; \
			$(LIBTOOL) --mode=compile $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@ 2> errors3; \
			if ( test ! -r SQLRConnection.lo ); then \
				if ( test -s errors1 ); then \
					echo "first try errors : "; cat errors1; echo; \
				fi; \
				if ( test -s errors2 ); then \
					echo "second try errors : "; cat errors2; echo; \
				fi; \
				if ( test -s errors3 ); then \
					echo "third try errors : "; cat errors3; echo; \
				fi; \
				exit 1; \
			else \
				cat errors3; \
				$(STRIPCOMMENTNOTE) $@; \
			fi; \
		else \
			cat errors2; \
			$(STRIPCOMMENTNOTE) $@; \
		fi; \
	else \
		cat errors1; \
		$(STRIPCOMMENTNOTE) $@; \
	fi; \
	$(RM) errors1 errors2 errors3 perlincludes.h


all: libSQLRConnection.la

clean:
	$(LIBTOOL) --mode=clean $(RM) *.la
	$(LIBTOOL) --mode=clean $(RM) *.lo
	$(LIBTOOL) --mode=clean $(RM) *.o	
	$(LIBTOOL) --mode=clean $(RM) *.so
	$(LIBTOOL) --mode=clean $(RM) *.$(PERLMAN3EXT)

rebuild: clean all

libSQLRConnection.la: SQLRConnection.xs SQLRConnection.C SQLRConnection.lo
	$(LIBTOOL) --mode=link $(CXX) -o $@ SQLRConnection.lo $(LIBS) -rpath $(PERLSITEARCH)/auto/Firstworks/SQLRConnection $(RPATH) -module

SQLRConnection.so:
	if ( test -r .libs/libSQLRConnection.0.0.0 ); \
	then \
		cp .libs/libSQLRConnection.0.0.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.0.0 ); \
	then \
		cp .libs/libSQLRConnection.0.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.0 ); \
	then \
		cp .libs/libSQLRConnection.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection ); \
	then \
		cp .libs/libSQLRConnection SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.so.0.0.0 ); \
	then \
		cp .libs/libSQLRConnection.so.0.0.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.so.0.0 ); \
	then \
		cp .libs/libSQLRConnection.so.0.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.so.0 ); \
	then \
		cp .libs/libSQLRConnection.so.0 SQLRConnection.so; \
	fi
	if ( test -r .libs/libSQLRConnection.so ); \
	then \
		cp .libs/libSQLRConnection.so SQLRConnection.so; \
	fi

install: SQLRConnection.so
	$(LIBTOOL) --mode=install $(INSTALL) SQLRConnection.so $(PERLSITEARCH)
	$(MKINSTALLDIRS) $(PERLSITEARCH)/Firstworks
	$(LIBTOOL) --mode=install $(INSTALL) -m 644 SQLRConnection.pm $(PERLSITEARCH)/Firstworks
	$(MKINSTALLDIRS) $(PERLSITEARCH)/auto/Firstworks/SQLRConnection
	$(LIBTOOL) --mode=install $(INSTALL) -m 755 SQLRConnection.so $(PERLSITEARCH)/auto/Firstworks/SQLRConnection
	touch $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/SQLRConnection.bs
	$(RM) SQLRConnection.so
	pod2man SQLRConnection.pm > Firstworks::SQLRConnection.$(PERLMAN3EXT)
	$(LIBTOOL) --mode=install $(INSTALL) -m 644 Firstworks::SQLRConnection.$(PERLMAN3EXT) $(PERLINSTALLMAN3DIR)
	$(RM) Firstworks::SQLRConnection.$(PERLMAN3EXT)
	echo $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/SQLRConnection.so > $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/.packlist
	echo $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/SQLRConnection.bs > $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/.packlist
	echo $(PERLINSTALLMAN3DIR)/Firstworks::SQLRConnection.$(PERLMAN3EXT) > $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/.packlist

uninstall:
	$(LIBTOOL) --mode=uninstall $(RM) `cat $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/.packlist`
	$(LIBTOOL) --mode=uninstall $(RM) $(PERLSITEARCH)/auto/Firstworks/SQLRConnection/.packlist
