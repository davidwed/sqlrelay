support @,: or ? for fake bind variables
rewrite queries with ?'s or @'s for oracle, rewrite queries with ?'s or :'s for
	sybase

sqlrclient classes shouldn't inherit from inet/unixclientsocket,
	rather should have member variables for each
ADODB interface
VB wrapper
FIXME's in mysql drop-in library
column flags for non-mysql databases
call endSession() from perl DBD finish method
licenses:
	Pear DB driver
	mysql replacement library
docs:
	mysql drop-in library
	postgresql drop-in library
	pear db driver
	perl dbi driver bind_param_inout
	new column flags
	countBindVariables()
tests:
	mysql drop-in library
	postgresql drop-in library
	perl dbi driver
		execute_array
		bind_param_array
		selectall_arrayref with attr/binds
		selectall_hashref with attr/binds
		selectcol_arrayref with attr/binds
		selectrow_array with attr/binds
		selectrow_arrayref with attr/binds
		selectrow_hashref with attr/binds
		prepare_cached
		fetchall_arrayref with slice
		quote
		err
		errstr
		state
		begin_work
		available_drivers
		data_sources
freetds-0.62/ct_param support
idle client timeout
perl apis -> CPAN

oldmysql test files for non-C++ api's

db2 start/stop doesn't work for 7.2
	db2start/db2stop works when run as a given instance owner
	db2 appears to need a license suddenly

setting backlog:
	linux:
		looks like max is 128 on linux 2.0
		2.2/2.4 - /proc/sys/net/ipv4/tcp_max_syn_backlog
			Default is 1024 for systems with more than 128Mb
			of memory, and 128 for low memory machines.
			If you make it greater than 1024, change
			TCP_SYNQ_HSIZE in include/net/tcp.h to keep
			TCP_SYNQ_HSIZE*16<=tcp_max_syn_backlog
			and recompile kernel.
		syn cookies - no max backlog
	solaris:
		/usr/sbin/ndd -set /dev/tcp tcp_conn_req_max 32


handle temp tables properly:
	oracle 8i: "create global temporary table ...
				[on commit preserve rows] (session specific)
				[on commit delete rows] (transaction specific)"
			temporary tables are not dropped when the session ends
			session tables are truncated when sessions end
			transacation tables are truncated on commit/rollback
	sybase: not dropped when session is over
			unless the name begins with a # sign
		are they truncated???
	interbase: ???

Tests:
	zope
	tcl
	odbc tests
	better pythondb/rubydbi tests
	test init scripts
	test send query w/length
	test upper/lower/mixed column case methods
	need database reconnect tests
	interbase stored procedure/output bind test
	column flags
	getFieldAsXXX
	getOutputBindAsXXX
	Java "getXXXAsByteArray" methods
	check blob/lobs with binary data in them
	interbase stored procedures

Compatibility:
	mysql 4.1, 5.0
	daemontools
	SCO:
		ruby api won't build
		postgresql won't configure
		php api won't build
	Solaris x86:
		ruby api won't build
	openbsd/netbsd:
		python api methods that call PyArg_ParseTuple with an "O"
			argument don't work, not exactly sure why

Documentation:
	getting started docs for MS SQL Server
	getting started docs for odbc
	"how sqlrelay works" with diagrams and animations
	example sqlrelay.conf's for different configurations
	recommended settings for each db, scaling
	performance benchmark charts
	HOWTO for linuxdoc.org
	man pages for everything

Performance/Code Enhancements:
	make some methods that return int return bool
	implement column flags as a bitmap
	persistent cursors - parse query, attach an id to it,
				make it available to other sessions
	client-side persistence/socket handoff daemon
	connection daemons could put buffers in shared memory and
		clients could send queries, access buffers using 
		shared memory and semaphores instead of unix sockets
	api methods to use preallocated buffers for result sets
	api methods for configuring optimistic buffer sizes
	configurable preallocated buffers on the server side
	result set compression during transmission for distant relays
	server side result set caching
	support batch DML in oracle8
	for databases that can return non-strings in their result sets, 
		send non strings to client
	seperate modules into standalone builds
	should be a single sqlr-connection daemon that dlopens the
		appropriate database module 
	login errors should be printed on the screen by sqlrconnection class,
		not by individual connections
	api for running queries in the background

Security:
	SSL encryption

Packages:
	FreeBSD
	NetBSD
	OpenBSD
	Solaris
	OpenServer
	Unixware/OpenUnix

Features:
	support output bind vars and stored procedures in sybase
	could debug logs be logrotate compatible?
	postgresql drop-in api lacks many features
	sybase/freetds (possibly others) need options for setting chained mode 
		and isolation mode when client connects
	sqlr-import/sqlr-export tools
	support vector binds
	handle output binds in Python-DB, Ruby-DBD
	datatype support:
		handle binary data correctly in all databases
		identical long/lob datatype support in all databases
		more advanced long/lob datatype support
		support for array datatypes
		handle blobs, quads in interbase
		handle timestamps
		handle enum types in mysql
	replication
	query filtering
	quotas
	logging
	handle commit/rollback for named transactions
	implement API's that handle errors with exceptions
	better transaction handling for postgresql
	query/fields cmdline tools need a timeout option
	maximum allowed clob bind value length should be configurable
	odbc connection should check the odbc definition
		for connect string arguments - SQLBrowseConnect
	solaris init script

Availability:
	connections should ping database server every so often to make sure
		it's up, if it's not, relogin
	master, fallback databases, where connection only goes to the fallback
		if the master is overloaded or down
	statistics, stat monitoring interface
	if a connection dies mysteriously, a new one should fire up

backends:
	pam_sqlrelay
	mod_auth_sqlrelay for apache
	samba auth module
	bind 9.1 backend
	dhcp backend
	qmail backend
	qpopper port
	bugzilla port

API's:
	wrapper:
		JDBC
		ODBC
		QT3
		C# - have a driver, just need to incorporate it
		ADA

Native DB Support:
	Informix
	SAP DB
	LocalSQL
	kekedb
	ThinkSQL
	picosql
	shsql

Config Tools:
	gtk2
	QT
	curses
	need keyboard shortcuts
	size should be less than 640x480
	connectstring editor
	wizard
